{"version":3,"sources":["Components/Section/Section.module.css","Components/Section/Section.js","Components/Phonebook/Phonebook.js","Components/Contacts/GetFilterContacts/GetFilterContacts.js","Components/Contacts/ContactFilterList/ContactFilterList.js","Components/Contacts/Contacts.js","Components/App.js","index.js","Components/Phonebook/Phonebook.module.css","Components/Contacts/Contacts.module.css"],"names":["module","exports","Section","children","className","s","PhoneBook","submitForm","useState","name","setName","number","setNumber","handleChangeInput","e","value","currentTarget","target","formReset","ContainerForm","onSubmit","preventDefault","Title","type","onChange","pattern","title","required","Btn","GetFilterContacts","filterContacts","onChangeFilter","style","Container","ContactFilterList","contactsList","onDeleteContact","List","map","id","ElemList","onClick","Contacts","mainListContact","length","App","contacts","setContacts","filters","setFilters","useEffect","cont","localStorage","getItem","parsContacts","JSON","parse","setItem","stringify","normalazFilter","toLowerCase","filterListContacts","filter","contact","includes","alert","elContact","shortid","generate","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b209c850.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__M3czb\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ children }) => <div className={s.Section}>{children}</div>;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\n\nexport default function PhoneBook({ submitForm }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChangeInput = (e) => {\n    const { value } = e.currentTarget;\n\n    switch (e.target.name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n\n    submitForm({ name, number });\n    formReset();\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.ContainerForm} onSubmit={onSubmitForm}>\n      <h2 className={s.Title}>Phonebook</h2>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.Btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nPhoneBook.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n};\n","\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport style from './GetFilterContacts.css'\r\n\r\nexport default function GetFilterContacts({filterContacts, onChangeFilter }) {\r\n\r\n\treturn (\r\n\t\t<>\r\n    <label className={style.Container} >\r\n            Find contacts by name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={filterContacts}\r\n              onChange={onChangeFilter}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n    </label>    \r\n    </>\r\n\t)\t\r\n};\r\n\r\nGetFilterContacts.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  filterContacts: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from './ContactFilterList.css';\r\n\r\nexport default function ContactFilterList({contactsList, onDeleteContact}) {\r\n\t\r\n\treturn (\r\n\t\t<ul className={ s.List }>\r\n\t\t\t{ contactsList.map(({ id, name, number }) => (\r\n\t\t\t\t<li key={ id } className={ s.ElemList }>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{ name }: { number }\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<button className={ s.Btn } onClick={ () => onDeleteContact(id) }>\r\n\t\t\t\t\t\tDelete contact\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t))\r\n\t\t\t}\r\n\t\t</ul>\t\r\n\t)\r\n};\r\n\r\nContactFilterList.propTypes = {\r\n  contactsList: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Contacts.module.css\";\n\nimport GetFilterContacts from './GetFilterContacts/GetFilterContacts'\nimport ContactFilterList from './ContactFilterList/ContactFilterList'\n\nconst Contacts = ({\n  mainListContact,\n  contactsList,\n  onDeleteContact,\n  filterContacts,\n  onChangeFilter,\n}) => {\n  return (\n    <div className={s.Container}>\n      <h2 className={s.Title}>Contacts</h2>\n      {mainListContact.length === 0 ? (\n        <p>Sorry! No contacts...</p>\n      ) : (\n        <>\n          <GetFilterContacts filterContacts={ filterContacts } onChangeFilter={ onChangeFilter } />\n          <ContactFilterList onDeleteContact={ onDeleteContact } contactsList={ contactsList} />\n        </>\n      )}\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contactsList: PropTypes.array.isRequired,\n  mainListContact: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  filterContacts: PropTypes.string.isRequired,\n};\n\nexport default Contacts;\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\n\nimport Section from \"./Section/Section\";\nimport PhoneBook from \"./Phonebook/Phonebook\";\nimport Contacts from \"./Contacts/Contacts\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filters, setFilters] = useState(\"\");\n\n  useEffect(() => {\n    const cont = localStorage.getItem(\"contacts\");\n    const parsContacts = JSON.parse(cont);\n\n    if (parsContacts) {\n      setContacts(parsContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const dataSubmitForm = ({ name, number }) => {\n    const arrayName = contacts.map((contact) => contact.name.toLowerCase());\n    const checkName = arrayName.includes(name.toLowerCase());\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      const elContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n      setContacts((prevState) => [elContact, ...prevState]);\n    }\n  };\n\n  const changeFilterContacts = (e) => {\n    setFilters(e.currentTarget.value);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const normalazFilter = filters.toLowerCase();\n  const filterListContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalazFilter)\n  );\n\n  return (\n    <Section>\n      <PhoneBook submitForm={dataSubmitForm} />\n\n      <Contacts\n        mainListContact={contacts}\n        onChangeFilter={changeFilterContacts}\n        filterContacts={filters}\n        contactsList={filterListContacts}\n        onDeleteContact={deleteContact}\n      />\n    </Section>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\n\n// import App from \"./Components/AppClass\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerForm\":\"Phonebook_ContainerForm__1e2xr\",\"Title\":\"Phonebook_Title__378rG\",\"Btn\":\"Phonebook_Btn__1D7tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Contacts_Container__1a9G-\",\"Title\":\"Contacts_Title__2I_GW\"};"],"sourceRoot":""}