{"version":3,"sources":["Components/Section/Section.module.css","Components/Contacts/Contacts.module.css","Components/Section/Section.js","Components/Phonebook/Phonebook.js","Components/Contacts/Contacts.js","Components/AppHook.js","index.js","Components/Phonebook/Phonebook.module.css"],"names":["module","exports","Section","children","className","s","PhoneBook","submitForm","useState","name","setName","number","setNumber","handleChangeInput","e","value","currentTarget","target","formReset","ContainerForm","onSubmit","preventDefault","console","log","Title","type","onChange","pattern","title","required","Btn","Contacts","mainListContact","contactsList","onDeleteContact","filterContacts","onChangeFilter","Container","length","List","Label","map","id","ElemList","onClick","App","contacts","setContacts","filters","setFilters","useEffect","cont","localStorage","getItem","parsContacts","JSON","parse","setItem","stringify","normalazFilter","toLowerCase","filterListContacts","filter","contact","includes","alert","elContact","shortid","generate","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.872f914a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__M3czb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Contacts_Container__1a9G-\",\"Title\":\"Contacts_Title__2I_GW\",\"List\":\"Contacts_List__1XJ-h\",\"ElemList\":\"Contacts_ElemList__2wsc5\",\"Btn\":\"Contacts_Btn__1td_c\",\"Label\":\"Contacts_Label__3WG_z\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ children }) => <div className={s.Section}>{children}</div>;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Phonebook.module.css\";\n\nexport default function PhoneBook({ submitForm }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeInput = e => {\n    const { value } = e.currentTarget;\n\n    switch (e.target.name) {\n      case 'name':\n        setName(value);\n        break;\n      \n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }    \n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    \n    console.log(name)\n    console.log(number)\n\n    submitForm ({name, number});\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('')\n  };\n\n\n  return (\n      <form className={s.ContainerForm} onSubmit={onSubmitForm}>\n        <h2 className={s.Title}>Phonebook</h2>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChangeInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.Btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );  \n};\n\nPhoneBook.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n};\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Contacts.module.css\";\n\nconst Contacts = ({\n  mainListContact,\n  contactsList,\n  onDeleteContact,\n  filterContacts,\n  onChangeFilter,\n}) => {\n  return (\n    <div className={s.Container}>\n      <h2 className={s.Title}>Contacts</h2>\n      {mainListContact.length === 0 ? (\n        <p>Sorry! No contacts...</p>\n      ) : (\n        <ul className={s.List}>\n          <label className={s.Label}>\n            Find contacts by name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={filterContacts}\n              onChange={onChangeFilter}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          {contactsList.map(({ id, name, number }) => (\n            <li key={id} className={s.ElemList}>\n              <p>\n                {name}: {number}\n              </p>\n              <button className={s.Btn} onClick={() => onDeleteContact(id)}>\n                Delete contact\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  contactsList: PropTypes.array.isRequired,\n  mainListContact: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n  filterContacts: PropTypes.string.isRequired,\n};\n\nexport default Contacts;\n","import {useState, useEffect} from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\n\r\n\r\nimport Section from './Section/Section';\r\nimport PhoneBook from './Phonebook/Phonebook';\r\nimport Contacts from './Contacts/Contacts';\r\n\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filters, setFilters] = useState('');\r\n    \r\n  useEffect(() => {\r\n    const cont = localStorage.getItem(\"contacts\");\r\n    const parsContacts = JSON.parse(cont);\r\n\r\n    if (parsContacts) {\r\n      setContacts(parsContacts);\r\n    }\r\n    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts])\r\n\r\n  const dataSubmitForm = ({ name, number }) => {\r\n\r\n    const arrayName = contacts.map((contact) =>\r\n      contact.name.toLowerCase()\r\n    );\r\n    const checkName = arrayName.includes(name.toLowerCase());\r\n\r\n    if (checkName) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    } else {\r\n      const elContact = {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n      };\r\n\r\n      setContacts(prevState => [elContact, ...prevState]);\r\n    }\r\n  };\r\n\r\n  const changeFilterContacts = (e) => {\r\n    setFilters(e.currentTarget.value);\r\n  };\r\n\r\n  const deleteContact = (contactId) => {\r\n    setContacts(prevState => prevState.filter(\r\n        (contact) => contact.id !== contactId),\r\n    );\r\n  };\r\n\r\n  const normalazFilter = filters.toLowerCase();\r\n  const filterListContacts = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalazFilter)\r\n  );\r\n  \r\n  \r\n    return (\r\n      <Section>\r\n        <PhoneBook submitForm={dataSubmitForm} />\r\n\r\n        <Contacts\r\n          mainListContact={contacts}\r\n          onChangeFilter={changeFilterContacts}\r\n          filterContacts={filters}\r\n          contactsList={filterListContacts}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </Section>\r\n    );\r\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.css\";\n\n// import App from \"./Components/AppClass\";\nimport App from \"./Components/AppHook\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerForm\":\"Phonebook_ContainerForm__1e2xr\",\"Title\":\"Phonebook_Title__378rG\",\"Btn\":\"Phonebook_Btn__1D7tH\"};"],"sourceRoot":""}